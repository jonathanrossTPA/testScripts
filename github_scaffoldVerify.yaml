name: .NET Scaffold CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'
  IMAGE_TAG: ${{ github.sha }}
  HELM_CHART_PATH: ./helm  # or ./k8s if you use raw manifests

jobs:
  build-test:
    name: 🧪 Build and Test .NET
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🧰 Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: 📦 Restore dependencies
        run: dotnet restore

      - name: 🏗️ Build
        run: dotnet build --no-restore --configuration Release

      - name: 🧪 Test
        run: dotnet test --no-build --verbosity normal

  docker:
    name: 🐳 Docker Build & Push
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🐳 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: 🐳 Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v2

      - name: 🐳 Build Docker image
        run: |
          docker build -t ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
      
      - name: 🚀 Push Docker image
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

  helm-lint:
    name: 🧭 Helm Lint
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🧭 Helm install
        uses: azure/setup-helm@v4

      - name: 🔍 Lint Helm chart
        run: helm lint ${{ env.HELM_CHART_PATH }}

  dry-run-deploy:
    name: ☸️ Dry Run Deploy to EKS
    runs-on: ubuntu-latest
    needs: helm-lint
    steps:
      - name: 🛎️ Checkout
        uses: actions/checkout@v4

      - name: 🧭 Helm install
        uses: azure/setup-helm@v4

      - name: ☸️ Setup kubectl
        uses: azure/setup-kubectl@v4

      - name: 🧾 Configure Kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

      - name: 🚀 Helm Dry Run Deploy
        run: |
          helm upgrade --install my-dotnet-app ${{ env.HELM_CHART_PATH }} \
            --namespace default \
            --set image.repository=${{ secrets.ECR_REGISTRY }}/${{ secrets.ECR_REPOSITORY }} \
            --set image.tag=${{ env.IMAGE_TAG }} \
            --dry-run --debug
